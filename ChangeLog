Version 1.1.2 (molinaro)
  * better SO_REUSEPORT check, this was failing on some old linux kernels

Version 1.1.1 (timrc)
  * Allow numeric and string literal default values in ESF.
    (Not stored in eventdb yet.)

Version 1.1.0 (timrc)
  * Added BYTE, FLOAT, DOUBLE for parity with Erlang/Java
  * Added array types, required/optional/nullable and string-size to ESF parser.
  * Added basic and nullable array type support to the library.
  * Flag invalid characters from ESF parser.
  * Removed LWES_*_TOKEN constants in favor of LWES_TYPE_* enum.
  * Use stdint types in typedefs (e.g. uint16_t for LWES_U_INT_16)
  * Removed lots of copy-paste code.
  * Moved repeated field-printing functions from the tools to the library.
  * Support bison 2.x and 3.x.

Version 1.0.2 (molinaro)
  * attempt to work with bison on travis box

Version 1.0.1 (molinaro)
  * see if removing some use statements prevent requiring perl when packaging

Version 1.0.0 (molinaro)
  * Possibly NON-BACKWARD-COMPATIBLE - changed some members of
    lwes_net_connection in order to reuse it in the lwes-journaller.
    This will not affect most users of the library and realistically
    doesn't actually require a rebuild in most cases, but I did change
    a public header in a non-backward compatible way
    (added an entry to the struct), so bumping the major version number.
  * Added SO_REUSEPORT when available for listening network connections.

Version 0.25.1 (molinaro)
  * use travis to upload dist tarballs

Version 0.25.0 (molinaro)
  * don't bother with num attributes when deserializing from bytes, just use
  byte offset
  * increase default hash bins to a more reasonable number

Version 0.24.0 (molinaro)
  * check types when attempting to get data out of an event
  * adding the same key to an event overwrites the old value as in the java
    implementation

Version 0.23.2 (fmaritato)
  * Added lwes-esf-validator. This program returns non-zero if the ESF file is
    not parsable; zero otherwise.

Version 0.23.1 (molinaro)
  * Changing LICENSE to New BSD
  * Adding Yahoo! copyrights

Version 0.23.0 (molinaro)
  * SIGPIPE should also cause a shutdown in lwes-event-printing-listener and
    lwes-event-counting-listener, this allows these programs to be the head
    of a processing pipeline, and correctly shutdown when the program after
    it in the pipeline exits.
  * return an error from esf_parser and event_type_db when a non-existent esf
    is attempted to be loaded.
  * allow empty events, ie, those defined as Empty {} in an esf to work and
    just pick up meta fields.

Version 0.22.3 (mlum)
  * Fixed memory leak in lexer
  * Allow multiple ESF parsers to exist
  * Changed bison to a pure parser, laying the foundation for a reentrant one

Version 0.22.2 (mlum)
  * Fixed dist target to include lwes-calculate-max-event-size

Version 0.22.1 (mlum)
  * Fixed some test coverage, added NULL safety to emitter

Version 0.22.0 (mlum)
  * Added license headers

Version 0.21.0 (molinaro)
  * 64-bit port actually builds reliably now
  * Removed lwes_perl.{c,h} from the lwes package, they
    didn't belong here, they are now in the lwes-perl package
  * Can now create unicast listeners
  * Fixed problem with from hex string on FreeBSD, this
    required refactoring the printing listener which first needed a test.

Version 0.20.2 (gelinj)
  * Support for 32 and 64-bit added.

Version 0.20.1 (molinaro)
  * minor problem where event name comparison could match prefixes, now
    it does an exact match

Version 0.20.0 (molinaro)
  * add a function compare to the event name prior to deserialization

Version 0.19.1 (molinaro)
  * minor fixes for port to 64-bit linux, basically the compiler is
    stricter about types, so fixing some compile warnings.

Version 0.19.0 (shaffer)
  * fix bad dependency.

Version 0.18.0 (shaffer)
  * Changed listener timestamps on FreeBSD.

Version 0.17.0 (molinaro)
  * set the SO_SNDBUF to a value large enough to send several large events

Version 0.16.2 (molinaro)
  * remove code added in version 0.15.0 to attempt to clear global bison buffer
    as it doesn't work in the case of multiple emitters.  Added a test case with
    the multiple emitters and commented out the offending line.  When I have
    a chance I'll go back and try to figure out how to fix this.

Version 0.16.1 (molinaro)
  * enumeration struct needs to be non-private in order to use it as just
    a struct.

Version 0.16.0 (molinaro)
  * Added a separate add_headers function in the listener, so one can listen
    for bytes, and add the header without deserializing the event.
  * Added doxygen comments for all public headers except lwes_perl.h which
    will be removed next major version bump.
  * Fixed a posible core dump when you create_no_name an event then try
    to emit it.
  * Added some methods for iterating over all the keys in an event.

Version 0.15.0 (molinaro)
  * 100% coverage on all tested functions
  * Added create_emitter_with_ttl to perl shortened forms

Version 0.14.0 (molinaro)
  * Library now defaults to a multicast ttl of 3
  * Added a new constructor for emitters to set a different ttl
  * Also, got coverage to 100% on all net functions

Version 0.13.1 (molinaro)
  * Haha, forgot to actually install the new script

Version 0.13.0 (molinaro)
  * now includes a script which given an esf file of extended format will
    output the max sizes of the events in that files

version 0.12.5 (molinaro)
  * Make parser use a unique prefix so this library and others which use
    flex/bison don't conflict

version 0.12.4 (molinaro)
  * Wrapped headers in conditional 'extern "c"' to avoid c++ name mangling.

version 0.12.3 (molinaro)
  * fubared 0.12.2 because of a local installed package

version 0.12.2 (molinaro)
  * changed variable names in header to not conflict with system headers

Version 0.12.1 (molinaro)
  * changed ports/bison to bison and ports/flex to flex in prereqs, prevents
    problems when these are installed as sys.

Version 0.12.0 (molinaro)
  * converted to skeletor package

Version 0.11.0 (molinaro)
  * non-blocking calls added

Version 0.9.0 (molinaro)
  * Changed numbering scheme

